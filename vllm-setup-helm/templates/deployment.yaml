apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-vllm-{{ lower .Values.vllm.model.label }}
  namespace: {{ .Release.Namespace | default .Values.namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: vllm
spec:
  replicas: {{ .Values.vllm.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: vllm
      {{- if and .Values.vllm.poolLabelKey .Values.vllm.poolLabelValue }}
      {{ .Values.vllm.poolLabelKey }}: {{ .Values.vllm.poolLabelValue }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: vllm
        {{- if and .Values.vllm.poolLabelKey .Values.vllm.poolLabelValue }}
        {{ .Values.vllm.poolLabelKey }}: {{ .Values.vllm.poolLabelValue }}
        {{- end }}
    spec:
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: vllm-p2p-storage
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.name }}{{ .Values.persistence.name }}{{ else }}{{ include "chart.pvcName" . }}{{ end }}
        {{- end }}
        {{- if .Values.dshm.useEmptyDir }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.dshm.sizeLimit }}
        {{- else if .Values.dshm.pvcName }}
        - name: dshm
          persistentVolumeClaim:
            claimName: {{ .Values.dshm.pvcName }}
        {{- end }}
      affinity:
        {{- toYaml .Values.vllm.affinity | nindent 8 }}
      containers:
        - name: vllm
          image: {{ include "chart.vllmImage" . }}
          imagePullPolicy: {{ .Values.vllm.image.pullPolicy }}
          command:
            - /bin/sh
            - '-c'
          args:
            - |
              export LMCACHE_DISTRIBUTED_URL=${POD_IP} && \
              vllm serve {{ .Values.vllm.model.name }} \
              --host 0.0.0.0 \
              --port 8000 \
              --trust-remote-code \
              {{- if .Values.vllm.enableChunkedPrefill }}
              --enable-chunked-prefill \{{- else }}--no-enable-chunked-prefill \
              {{- end }}
              --max_num_batched_tokens {{ .Values.vllm.maxNumBatchedTokens }} \
              {{- if .Values.vllm.gpuMemoryUtilization }}
              --gpu-memory-utilization {{ .Values.vllm.gpuMemoryUtilization }} \
              {{- end }}
              {{- if .Values.vllm.tensorParallelSize }}
              --tensor-parallel-size {{ .Values.vllm.tensorParallelSize }} \
              {{- end }}
              {{- if .Values.vllm.model.maxModelLen }}
              --max_model_len {{ .Values.vllm.model.maxModelLen }} \
              {{- end }}
              --kv-transfer-config '{"kv_connector":"LMCacheConnectorV1","kv_role":"kv_both"}' \
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: lmcache-dist # Assuming port 80 is used for LMCACHE_DISTRIBUTED_URL
              containerPort: 80
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.vllm.livenessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.vllm.startupProbe | nindent 12 }}
          env:
            - name: HF_HOME
              value: {{ .Values.persistence.mountPath }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: {{ include "chart.secretKeyName" . }}
            {{- if .Values.redis.enabled }}
            - name: LMCACHE_LOOKUP_URL
              value: {{ include "chart.redisServiceUrl" . }}
            {{- end }}
            {{- range $key, $val := .Values.vllm.extraEnv }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.vllm.resources | nindent 12 }}
          {{- if or .Values.dshm.useEmptyDir .Values.dshm.pvcName }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: vllm-p2p-storage
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            - name: dshm
              mountPath: /dev/shm
          {{- else if .Values.persistence.enabled }}
          volumeMounts:
            - name: vllm-p2p-storage
              mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            runAsNonRoot: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: "100%"
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 1200
